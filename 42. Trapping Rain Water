class Solution {
public:
    int trap(vector<int>& height) {
        int d=0;
        int cnt=0;
        int n=height.size();
        vector <int> lm(n);
        vector <int> rm(n);
        lm[0]=height[0];
        rm[n-1]=height[n-1];

        for(int i=1;i<n;i++)
        {
            if(lm[i-1]<height[i]){
                lm[i]=height[i];
            }else{
                lm[i]=lm[i-1];
            }

        }
        for(int i=n-2;i>=0;i--)
        {
            if(height[i]>rm[i+1])
                d=height[i];
            else
                d=rm[i+1];

            rm[i]=d;
        }
        for(int i=1;i<n-1;i++)
        {
          if(height[i]<lm[i-1] &&  height[i]<rm[i+1])
          {
              cnt=cnt+min((lm[i-1]-height[i]),(rm[i+1]-height[i]));
          } 

        }
        return cnt;
    }
};
